import marked from 'marked';

var base = '';
if (process.env.NODE_ENV === 'development') {
	base = 'http://localhost:4000/api';
} else {
	base = 'https://now-restlike-api.now.sh/api';
}

var spreprocess = null;

function processContent(data, callback) {
	if (callback !== null) {
		if (Array.isArray(data)) {
			data.map((item) => {
				item.content = callback(item.content);
			});
		} else {
			data.content = callback(data.content);
		}
		return data;
	} else {
		return data;
	}
}

export function send({ method, path, data, token }) {
	const fetch = process.browser ? window.fetch : require('node-fetch').default;

	const opts = { method, headers: {} };

	if (data) {
		opts.headers['Content-Type'] = 'application/json';
		opts.body = JSON.stringify(data);
	}

	if (token) {
		opts.headers['Authorization'] = `Token ${token}`;
	}

	return fetch(`${base}/${path}`, opts).then((r) => r.text()).then((json) => {
		var data = JSON.parse(json);
		try {
			return processContent(data, spreprocess);
		} catch (err) {
			return json;
		}
	});
}

export function get(path, token) {
	return send({ method: 'GET', path, token });
}

export default function stancy({ preprocess }) {
	spreprocess = preprocess;
	return {
		get: (path, token) => {
			return get(path, token);
		}
	};
}

stancy({
	preprocess: (content) => marked(content)
});
